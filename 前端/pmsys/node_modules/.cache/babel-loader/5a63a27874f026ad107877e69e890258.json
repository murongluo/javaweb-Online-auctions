{"remainingRequest":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\25194\\Desktop\\pmsys\\src\\utils\\request.js","dependencies":[{"path":"C:\\Users\\25194\\Desktop\\pmsys\\src\\utils\\request.js","mtime":1594005027000},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\babel.config.js","mtime":1594005027000},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713940553201},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1713699606252},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\babel-loader\\lib\\index.js","mtime":1713699606133}],"contextDependencies":[],"result":["import axios from 'axios';\nvar service = axios.create({\n  // process.env.NODE_ENV === 'development' 来判断是否开发环境\n  // easy-mock服务挂了，暂时不使用了\n  // baseURL: 'https://www.easy-mock.com/mock/592501a391470c0ac1fab128',\n  timeout: 5000\n});\nservice.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  console.log(error);\n  return Promise.reject();\n});\nservice.interceptors.response.use(function (response) {\n  if (response.status === 200) {\n    return response.data;\n  } else {\n    Promise.reject();\n  }\n}, function (error) {\n  console.log(error);\n  return Promise.reject();\n});\nexport default service;",{"version":3,"names":["axios","service","create","timeout","interceptors","request","use","config","error","console","log","Promise","reject","response","status","data"],"sources":["C:/Users/25194/Desktop/pmsys/src/utils/request.js"],"sourcesContent":["import axios from 'axios';\n\nconst service = axios.create({\n    // process.env.NODE_ENV === 'development' 来判断是否开发环境\n    // easy-mock服务挂了，暂时不使用了\n    // baseURL: 'https://www.easy-mock.com/mock/592501a391470c0ac1fab128',\n    timeout: 5000\n});\n\nservice.interceptors.request.use(\n    config => {\n        return config;\n    },\n    error => {\n        console.log(error);\n        return Promise.reject();\n    }\n);\n\nservice.interceptors.response.use(\n    response => {\n        if (response.status === 200) {\n            return response.data;\n        } else {\n            Promise.reject();\n        }\n    },\n    error => {\n        console.log(error);\n        return Promise.reject();\n    }\n);\n\nexport default service;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzB;EACA;EACA;EACAC,OAAO,EAAE;AACb,CAAC,CAAC;AAEFF,OAAO,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5B,UAAAC,MAAM,EAAI;EACN,OAAOA,MAAM;AACjB,CAAC,EACD,UAAAC,KAAK,EAAI;EACLC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,OAAOG,OAAO,CAACC,MAAM,CAAC,CAAC;AAC3B,CACJ,CAAC;AAEDX,OAAO,CAACG,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC7B,UAAAO,QAAQ,EAAI;EACR,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACzB,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,MAAM;IACHJ,OAAO,CAACC,MAAM,CAAC,CAAC;EACpB;AACJ,CAAC,EACD,UAAAJ,KAAK,EAAI;EACLC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,OAAOG,OAAO,CAACC,MAAM,CAAC,CAAC;AAC3B,CACJ,CAAC;AAED,eAAeX,OAAO","ignoreList":[]}]}
