{"remainingRequest":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\25194\\Desktop\\pmsys\\src\\components\\pmsys\\Forgot.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\25194\\Desktop\\pmsys\\src\\components\\pmsys\\Forgot.vue","mtime":1715680294605},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713940553201},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\babel-loader\\lib\\index.js","mtime":1713699606133},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713940553201},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\index.js","mtime":1713699628743},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\babel.config.js","mtime":1717413171333},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713940553201},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\babel-loader\\lib\\index.js","mtime":1713699606133},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713940553201},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\index.js","mtime":1713699628743}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/25194/Desktop/pmsys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios from 'axios';\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  // ... rest of your component options\n  data: function data() {\n    return {\n      data: '',\n      user: {\n        userId: '',\n        email: ''\n      }\n    };\n  },\n  methods: {\n    register: function () {\n      var _register = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.$refs.userForm.validate(function (valid) {\n                if (valid) {\n                  if (_this.user.password !== _this.user.confirmpassword) {\n                    _this.$message.error('两次密码不一致！');\n                    return false;\n                  }\n                  console.info(_this.user);\n                  axios.post('http://localhost:8080/login/forgot', {\n                    userId: _this.user.userId,\n                    email: _this.user.email\n                  }).then(function (response) {\n                    // 假设响应数据中有一个字段 `success` 表示注册是否成功\n                    if (response.data.code == 1) {\n                      console.log('注册成功');\n                      _this.$message({\n                        message: '恭喜你，重置成功',\n                        type: 'success'\n                      });\n                      // 这里可以添加注册成功后的处理逻辑，比如跳转到登录页面或显示成功消息\n                    } else {\n                      console.log('注册失败');\n                      _this.$message.error('错了哦,email可能重复');\n                      // 这里可以添加注册失败后的处理逻辑，比如显示错误消息\n                    }\n                  }).catch(function (error) {\n                    console.error('注册过程中发生错误:', error);\n                    // 这里可以添加错误处理逻辑，比如显示错误消息\n                  });\n                } else {\n                  console.log('error submit!!');\n                  return false;\n                }\n              });\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function register() {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n  }\n};",{"version":3,"names":["axios","data","user","userId","email","methods","register","_register","_asyncToGenerator","regeneratorRuntime","mark","_callee","_this","wrap","_callee$","_context","prev","next","$refs","userForm","validate","valid","password","confirmpassword","$message","error","console","info","post","then","response","code","log","message","type","catch","stop","apply","arguments"],"sources":["src/components/pmsys/Forgot.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div\r\n            class=\"container\"\r\n            :style=\"{\r\n                minHeight: '100vh',\r\n                alignItems: 'center',\r\n                background: 'url(http://codegen.caihongy.cn/20220804/122aadd2e96d4d5aa6a265bbd560a18d.gif)',\r\n                display: 'flex',\r\n                width: '100%',\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center center',\r\n                backgroundRepeat: 'no-repeat',\r\n                justifyContent: 'center'\r\n            }\"\r\n        >\r\n            <div class=\"wrapper\">\r\n                <div style=\"margin: 150px auto; width: 400px; height: 450px; padding: 20px; border-radius: 10px\">\r\n                    <div style=\"margin: 20px 0; text-align: center; font-size: 24px\">\r\n                        <b>重置密码</b>\r\n                    </div>\r\n                    <el-form :model=\"user\" :rules=\"rules\" ref=\"userForm\">\r\n                        <el-form-item prop=\"email\">\r\n                            <el-input\r\n                                placeholder=\"邮箱\"\r\n                                size=\"medium\"\r\n                                style=\"margin: 10px 0\"\r\n                                prefix-icon=\"el-icon-message\"\r\n                                v-model=\"user.email\"\r\n                            >\r\n                            </el-input>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item prop=\"userId\">\r\n                            <el-input\r\n                                placeholder=\"用户Id\"\r\n                                size=\"medium\"\r\n                                style=\"margin: 10px 0\"\r\n                                prefix-icon=\"el-icon-user\"\r\n                                v-model=\"user.userId\"\r\n                            >\r\n                            </el-input>\r\n                        </el-form-item>\r\n                        <div style=\"margin: 10px 0; text-align: right\">\r\n                            <el-button type=\"primary\" size=\"small\" autocomplete=\"off\" @click=\"register()\">提交</el-button>\r\n                            <el-button type=\"warning\" size=\"small\" autocomplete=\"off\" @click=\"$router.push('/syslogin')\"\r\n                                >返回登录</el-button\r\n                            >\r\n                        </div>\r\n                    </el-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n  <script>\r\nimport axios from 'axios';\r\nexport default {\r\n    // eslint-disable-next-line vue/multi-word-component-names\r\n\r\n    // ... rest of your component options\r\n    data() {\r\n        return {\r\n            data: '',\r\n            user: {\r\n                userId: '',\r\n                email: ''\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        async register() {\r\n            this.$refs.userForm.validate((valid) => {\r\n                if (valid) {\r\n                    if (this.user.password !== this.user.confirmpassword) {\r\n                        this.$message.error('两次密码不一致！');\r\n                        return false;\r\n                    }\r\n                    console.info(this.user);\r\n                    axios.post('http://localhost:8080/login/forgot', {\r\n                            userId:this.user.userId,\r\n                            email: this.user.email\r\n                        })\r\n                        .then((response) => {\r\n                            // 假设响应数据中有一个字段 `success` 表示注册是否成功\r\n                            if (response.data.code == 1) {\r\n                                console.log('注册成功');\r\n                                this.$message({\r\n                                    message: '恭喜你，重置成功',\r\n                                    type: 'success'\r\n                                });\r\n                                // 这里可以添加注册成功后的处理逻辑，比如跳转到登录页面或显示成功消息\r\n                            } else {\r\n                                console.log('注册失败');\r\n                                this.$message.error('错了哦,email可能重复');\r\n                                // 这里可以添加注册失败后的处理逻辑，比如显示错误消息\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            console.error('注册过程中发生错误:', error);\r\n                            // 这里可以添加错误处理逻辑，比如显示错误消息\r\n                        });\r\n                } else {\r\n                    console.log('error submit!!');\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>\r\n  "],"mappings":";;AAyDA,OAAAA,KAAA;AACA;EACA;EAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAA,IAAA;MACAC,IAAA;QACAC,MAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MAAA,IAAAC,SAAA,GAAAC,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,KAAA;QAAA,OAAAH,kBAAA,CAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACA,KAAAC,KAAA,CAAAC,QAAA,CAAAC,QAAA,WAAAC,KAAA;gBACA,IAAAA,KAAA;kBACA,IAAAT,KAAA,CAAAV,IAAA,CAAAoB,QAAA,KAAAV,KAAA,CAAAV,IAAA,CAAAqB,eAAA;oBACAX,KAAA,CAAAY,QAAA,CAAAC,KAAA;oBACA;kBACA;kBACAC,OAAA,CAAAC,IAAA,CAAAf,KAAA,CAAAV,IAAA;kBACAF,KAAA,CAAA4B,IAAA;oBACAzB,MAAA,EAAAS,KAAA,CAAAV,IAAA,CAAAC,MAAA;oBACAC,KAAA,EAAAQ,KAAA,CAAAV,IAAA,CAAAE;kBACA,GACAyB,IAAA,WAAAC,QAAA;oBACA;oBACA,IAAAA,QAAA,CAAA7B,IAAA,CAAA8B,IAAA;sBACAL,OAAA,CAAAM,GAAA;sBACApB,KAAA,CAAAY,QAAA;wBACAS,OAAA;wBACAC,IAAA;sBACA;sBACA;oBACA;sBACAR,OAAA,CAAAM,GAAA;sBACApB,KAAA,CAAAY,QAAA,CAAAC,KAAA;sBACA;oBACA;kBACA,GACAU,KAAA,WAAAV,KAAA;oBACAC,OAAA,CAAAD,KAAA,eAAAA,KAAA;oBACA;kBACA;gBACA;kBACAC,OAAA,CAAAM,GAAA;kBACA;gBACA;cACA;YAAA;YAAA;cAAA,OAAAjB,QAAA,CAAAqB,IAAA;UAAA;QAAA,GAAAzB,OAAA;MAAA;MAAA,SAAAL,SAAA;QAAA,OAAAC,SAAA,CAAA8B,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAhC,QAAA;IAAA;EAEA;AACA","ignoreList":[]}]}
