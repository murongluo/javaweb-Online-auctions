{"remainingRequest":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\25194\\Desktop\\pmsys\\src\\components\\pmsys\\SysRegister.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\25194\\Desktop\\pmsys\\src\\components\\pmsys\\SysRegister.vue","mtime":1715680294605},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\babel-loader\\lib\\index.js","mtime":1713699606133},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713940553201},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\index.js","mtime":1713699628743}],"contextDependencies":[],"result":["\r\n  import axios from 'axios';\r\n  export default {\r\n    // eslint-disable-next-line vue/multi-word-component-names\r\n    \r\n    // ... rest of your component options\r\n    data() {\r\n      return {\r\n        data: \"\",\r\n        user: {\r\n          username: \"\",\r\n          password: \"\",\r\n          nickname: \"\",\r\n          confirmpassword: \"\",\r\n          email: \"\",\r\n        },\r\n        rules: {\r\n          username: [\r\n            { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n            {\r\n              min: 1,\r\n              max: 15,\r\n              message: \"长度在 1 到 15 个字符\",\r\n              trigger: \"blur\",\r\n            },\r\n          ],\r\n          password: [\r\n            { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n            {\r\n              min: 1,\r\n              max: 15,\r\n              message: \"长度在 1 到 15 个字符\",\r\n              trigger: \"blur\",\r\n            },\r\n          ],\r\n          confirmpassword: [\r\n            { required: true, message: \"请确认密码\", trigger: \"blur\" },\r\n            {\r\n              min: 1,\r\n              max: 15,\r\n              message: \"长度在 1 到 15 个字符\",\r\n              trigger: \"blur\",\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    },\r\n    methods: {\r\n      async register() {\r\n        this.$refs.userForm.validate((valid) => {\r\n          if (valid) {\r\n            if (this.user.password !== this.user.confirmpassword) {\r\n              this.$message.error(\"两次密码不一致！\");\r\n              return false;\r\n            }\r\n            console.info(this.user);\r\n            axios.post(\"http://localhost:8080/login/adduser\", {\r\n                username: this.user.username,\r\n                passwordHash: this.user.password,\r\n                email: this.user.email,\r\n              })\r\n              .then((response) => {\r\n                // 假设响应数据中有一个字段 `success` 表示注册是否成功\r\n                if (response.data.code == 1) {\r\n                  console.log(\"注册成功\");\r\n                  this.$message({\r\n                    message: \"恭喜你，注册成功\",\r\n                    type: \"success\",\r\n                  });\r\n                  // 这里可以添加注册成功后的处理逻辑，比如跳转到登录页面或显示成功消息\r\n                } else {\r\n                  console.log(\"注册失败\");\r\n                  // 这里可以添加注册失败后的处理逻辑，比如显示错误消息\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"注册过程中发生错误:\", error);\r\n                // 这里可以添加错误处理逻辑，比如显示错误消息\r\n              });\r\n          } else {\r\n            console.log(\"error submit!!\");\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n    },\r\n  };\r\n  ",{"version":3,"sources":["SysRegister.vue"],"names":[],"mappings":";AA+FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SysRegister.vue","sourceRoot":"src/components/pmsys","sourcesContent":["<template>\r\n    <div>\r\n      <div\r\n        class=\"container\"\r\n        :style=\"{\r\n          minHeight: '100vh',\r\n          alignItems: 'center',\r\n          background:\r\n            'url(http://codegen.caihongy.cn/20220804/122aadd2e96d4d5aa6a265bbd560a18d.gif)',\r\n          display: 'flex',\r\n          width: '100%',\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center center',\r\n          backgroundRepeat: 'no-repeat',\r\n          justifyContent: 'center',\r\n        }\"\r\n      >\r\n        <div class=\"wrapper\">\r\n          <div\r\n            style=\"\r\n              margin: 150px auto;\r\n              width: 400px;\r\n              height: 450px;\r\n              padding: 20px;\r\n              border-radius: 10px;\r\n            \"\r\n          >\r\n            <div style=\"margin: 20px 0; text-align: center; font-size: 24px\">\r\n              <b>注 册</b>\r\n            </div>\r\n            <el-form :model=\"user\" :rules=\"rules\" ref=\"userForm\">\r\n              <el-form-item prop=\"username\">\r\n                <el-input\r\n                  placeholder=\"请输入用户名\"\r\n                  size=\"medium\"\r\n                  style=\"margin: 10px 0\"\r\n                  prefix-icon=\"el-icon-user\"\r\n                  v-model=\"user.username\"\r\n                >\r\n                </el-input>\r\n              </el-form-item>\r\n              <el-form-item prop=\"email\">\r\n                <el-input\r\n                  placeholder=\"邮箱\"\r\n                  size=\"medium\"\r\n                  style=\"margin: 10px 0\"\r\n                  prefix-icon=\"el-icon-message\"\r\n                  v-model=\"user.email\"\r\n                >\r\n                </el-input>\r\n              </el-form-item>\r\n              <el-form-item prop=\"password\">\r\n                <el-input\r\n                  placeholder=\"请输入密码\"\r\n                  size=\"medium\"\r\n                  style=\"margin: 10px 0\"\r\n                  prefix-icon=\"el-icon-lock\"\r\n                  show-password\r\n                  v-model=\"user.password\"\r\n                ></el-input>\r\n              </el-form-item>\r\n              <el-form-item prop=\"confirmpassword\">\r\n                <el-input\r\n                  placeholder=\"请确认密码\"\r\n                  size=\"medium\"\r\n                  style=\"margin: 10px 0\"\r\n                  prefix-icon=\"el-icon-lock\"\r\n                  show-password\r\n                  v-model=\"user.confirmpassword\"\r\n                ></el-input>\r\n              </el-form-item>\r\n              <div style=\"margin: 10px 0; text-align: right\">\r\n                <el-button\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  autocomplete=\"off\"\r\n                  @click=\"register()\"\r\n                  >注册</el-button\r\n                >\r\n                <el-button\r\n                  type=\"warning\"\r\n                  size=\"small\"\r\n                  autocomplete=\"off\"\r\n                  @click=\"$router.push('/syslogin')\"\r\n                  >返回登录</el-button\r\n                >\r\n              </div>\r\n            </el-form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  export default {\r\n    // eslint-disable-next-line vue/multi-word-component-names\r\n    \r\n    // ... rest of your component options\r\n    data() {\r\n      return {\r\n        data: \"\",\r\n        user: {\r\n          username: \"\",\r\n          password: \"\",\r\n          nickname: \"\",\r\n          confirmpassword: \"\",\r\n          email: \"\",\r\n        },\r\n        rules: {\r\n          username: [\r\n            { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n            {\r\n              min: 1,\r\n              max: 15,\r\n              message: \"长度在 1 到 15 个字符\",\r\n              trigger: \"blur\",\r\n            },\r\n          ],\r\n          password: [\r\n            { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n            {\r\n              min: 1,\r\n              max: 15,\r\n              message: \"长度在 1 到 15 个字符\",\r\n              trigger: \"blur\",\r\n            },\r\n          ],\r\n          confirmpassword: [\r\n            { required: true, message: \"请确认密码\", trigger: \"blur\" },\r\n            {\r\n              min: 1,\r\n              max: 15,\r\n              message: \"长度在 1 到 15 个字符\",\r\n              trigger: \"blur\",\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    },\r\n    methods: {\r\n      async register() {\r\n        this.$refs.userForm.validate((valid) => {\r\n          if (valid) {\r\n            if (this.user.password !== this.user.confirmpassword) {\r\n              this.$message.error(\"两次密码不一致！\");\r\n              return false;\r\n            }\r\n            console.info(this.user);\r\n            axios.post(\"http://localhost:8080/login/adduser\", {\r\n                username: this.user.username,\r\n                passwordHash: this.user.password,\r\n                email: this.user.email,\r\n              })\r\n              .then((response) => {\r\n                // 假设响应数据中有一个字段 `success` 表示注册是否成功\r\n                if (response.data.code == 1) {\r\n                  console.log(\"注册成功\");\r\n                  this.$message({\r\n                    message: \"恭喜你，注册成功\",\r\n                    type: \"success\",\r\n                  });\r\n                  // 这里可以添加注册成功后的处理逻辑，比如跳转到登录页面或显示成功消息\r\n                } else {\r\n                  console.log(\"注册失败\");\r\n                  // 这里可以添加注册失败后的处理逻辑，比如显示错误消息\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"注册过程中发生错误:\", error);\r\n                // 这里可以添加错误处理逻辑，比如显示错误消息\r\n              });\r\n          } else {\r\n            console.log(\"error submit!!\");\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "]}]}
