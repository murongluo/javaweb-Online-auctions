{"remainingRequest":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\25194\\Desktop\\pmsys\\src\\components\\page\\AdminLogin.vue?vue&type=style&index=0&id=0d06d3cc&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\25194\\Desktop\\pmsys\\src\\components\\page\\AdminLogin.vue","mtime":1716877304131},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\css-loader\\index.js","mtime":1713940553245},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1713699628743},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\postcss-loader\\src\\index.js","mtime":1713699628041},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713940553201},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\index.js","mtime":1713699628743}],"contextDependencies":[],"result":["\n.login-wrap {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-image: url(../../assets/img/login-bg.jpg);\n    background-size: 100%;\n}\n.ms-title {\n    width: 100%;\n    line-height: 50px;\n    text-align: center;\n    font-size: 20px;\n    color: #fff;\n    border-bottom: 1px solid #ddd;\n}\n.ms-login {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: 350px;\n    margin: -190px 0 0 -175px;\n    border-radius: 5px;\n    background: rgba(255, 255, 255, 0.3);\n    overflow: hidden;\n}\n.ms-content {\n    padding: 30px 30px;\n}\n.login-btn {\n    text-align: center;\n}\n.login-btn button {\n    width: 100%;\n    height: 36px;\n    margin-bottom: 10px;\n}\n.login-tips {\n    font-size: 12px;\n    line-height: 30px;\n    color: #fff;\n}\n",{"version":3,"sources":["AdminLogin.vue"],"names":[],"mappings":";AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AdminLogin.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div class=\"login-wrap\">\n        <div class=\"ms-login\">\n            <div class=\"ms-title\">后台管理系统</div>\n            <el-form :model=\"param\" :rules=\"rules\" ref=\"loginForm\" label-width=\"0px\" class=\"ms-content\">\n                <el-form-item prop=\"userid\">\n                    <el-input v-model=\"param.userId\" placeholder=\"userId\">\n                        <el-button slot=\"prepend\" icon=\"el-icon-user\"></el-button>\n                    </el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <el-input type=\"password\" placeholder=\"Password\" v-model=\"param.password\" @keyup.enter.native=\"submitForm\">\n                        <el-button slot=\"prepend\" icon=\"el-icon-lock\"></el-button>\n                    </el-input>\n                </el-form-item>\n                <div class=\"login-btn\">\n                    <el-button type=\"primary\" @click=\"submitForm\">登录</el-button>\n                </div>\n            </el-form>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            \n            param: {\n                userId: '',\n                password: '',\n            },\n            rules: {\n                userId: [{ required: true, message: '请输入用户id', trigger: 'blur' }],\n                password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\n            }\n        };\n    },\n    methods: {\n        submitForm() {\n            console.info(this.param)\n            this.$refs.loginForm.validate(async valid => {\n                if (valid) {\n                    try {\n                        const response = await axios.post('http://localhost:8080/adminlogin', this.param);\n                        if (response.data.code === 1) {\n                            this.$message.success('登录成功');\n                            const userData = {\n                                userId: response.data.data.userId,\n                                userType: response.data.data.userType,\n                                username: response.data.data.username,\n                                token: response.data.data.token,\n                                image: response.data.data.image,\n                                lastLoginDate:response.data.data.lastLoginDate\n                            };\n                            localStorage.setItem('user', JSON.stringify(userData));\n                            this.$router.push('/dashboard');  // 跳转到仪表板\n                        } else {\n                            this.$message.error(response.data.msg || '登录失败');  // 显示错误信息\n                        }\n                    } catch (error) {\n                        this.$message.error('网络错误或服务器无响应');\n                        console.error('Error on login:', error);\n                    }\n                } else {\n                    this.$message.error('请输入有效的用户名和密码');\n                }\n            });\n        }\n    }\n};\n</script>\n\n\n<style scoped>\n.login-wrap {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-image: url(../../assets/img/login-bg.jpg);\n    background-size: 100%;\n}\n.ms-title {\n    width: 100%;\n    line-height: 50px;\n    text-align: center;\n    font-size: 20px;\n    color: #fff;\n    border-bottom: 1px solid #ddd;\n}\n.ms-login {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: 350px;\n    margin: -190px 0 0 -175px;\n    border-radius: 5px;\n    background: rgba(255, 255, 255, 0.3);\n    overflow: hidden;\n}\n.ms-content {\n    padding: 30px 30px;\n}\n.login-btn {\n    text-align: center;\n}\n.login-btn button {\n    width: 100%;\n    height: 36px;\n    margin-bottom: 10px;\n}\n.login-tips {\n    font-size: 12px;\n    line-height: 30px;\n    color: #fff;\n}\n</style>"]}]}
