{"remainingRequest":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\25194\\Desktop\\pmsys\\src\\components\\pmsys\\AuIt.vue?vue&type=style&index=0&id=2aac26ae&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\25194\\Desktop\\pmsys\\src\\components\\pmsys\\AuIt.vue","mtime":1716594394585},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\css-loader\\index.js","mtime":1713940553245},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1713699628743},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\postcss-loader\\src\\index.js","mtime":1713699628041},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713940553201},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\index.js","mtime":1713699628743}],"contextDependencies":[],"result":["\r\n.auction-details h1 {\r\n  color: #333;\r\n  margin-bottom: 20px; \r\n}\r\n.auction-details p {\r\n  color: #666;\r\n  margin-bottom: 20px;\r\n}\r\n/* Styles here */\r\n.image {\r\n  width: 100%;\r\n  object-fit: cover;\r\n}\r\n.image {\r\n  width: 150px;\r\n  height: 150px;\r\n  object-fit: cover; /* 确保图片被缩放以适应容器，而不会被裁剪 */\r\n}\r\n\r\n.gallery-carousel {\r\n  text-align: center; /* 居中显示 */\r\n  margin: 20px; /* 调整外边距以突出显示 */\r\n}\r\n\r\n.el-carousel {\r\n  height: 300px; /* 根据实际情况调整高度 */\r\n}\r\n\r\n.el-carousel-item img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* 图片会被缩放以适应容器，而不会被裁剪 */\r\n}\r\n\r\n.gallery-title {\r\n  color: #ffd04b; /* 显眼的颜色 */\r\n}\r\n\r\n.el-dialog {\r\n  margin-top: 20vh; /* 对话框顶部与页面顶部对齐 */\r\n}\r\n",{"version":3,"sources":["AuIt.vue"],"names":[],"mappings":";AAyUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"AuIt.vue","sourceRoot":"src/components/pmsys","sourcesContent":["<template>\r\n  <div class=\"menupage\">\r\n      <el-menu\r\n          :default-active=\"activeIndex\"\r\n          class=\"el-menu-demo\"\r\n          mode=\"horizontal\"\r\n          @select=\"handleSelect\"\r\n          background-color=\"#545c64\"\r\n          text-color=\"#fff\"\r\n          active-text-color=\"#ffd04b\"\r\n      >\r\n          <p class=\"logo-title\"><i class=\"el-icon-user\"></i>槐序拍卖平台</p>\r\n          <el-menu-item index=\"1\" style=\"margin-left: 300px;\">平台首页</el-menu-item>\r\n          <el-menu-item index=\"2\">平台简介</el-menu-item>\r\n          <el-menu-item index=\"3\">拍品展示</el-menu-item>\r\n          <el-menu-item index=\"4\">拍卖行</el-menu-item>\r\n          <el-submenu index=\"5\">\r\n              <template slot=\"title\">我的</template>\r\n              <el-menu-item index=\"5-1\">我的信息</el-menu-item>\r\n              <el-menu-item index=\"5-2\">前往后台</el-menu-item>\r\n              <el-menu-item index=\"5-3\">退出登录</el-menu-item>\r\n          </el-submenu>\r\n          <el-menu-item index=\"6\">登录/注册</el-menu-item>\r\n      </el-menu>\r\n      <div>\r\n        <div class=\"menupage\">\r\n    <div class=\"auction-details\">\r\n      <p v-if=\"timeLeft.days >= 0\">剩余时间: {{ timeLeft.days }}天 {{ timeLeft.hours }}小时 {{ timeLeft.minutes }}分钟 {{ timeLeft.seconds }}秒</p>\r\n      <p v-else>拍卖已结束</p>\r\n    </div>\r\n  </div>\r\n          <el-row :gutter=\"20\">\r\n              <el-col :span=\"24\">\r\n                  <el-card class=\"box-card\">\r\n                      <div class=\"content\">\r\n                          <el-row :gutter=\"20\">\r\n                              <el-col :span=\"8\" v-for=\"(product, index) in data\" :key=\"index\">\r\n                                  <el-card class=\"box-card\">\r\n                                      <img :src=\"product.image\" class=\"image\" alt=\"商品图片\" />\r\n                                      <div class=\"content\">\r\n                                          <span class=\"name\">{{ product.name }}</span>\r\n                                          <br />\r\n                                          <span class=\"description\">类型：{{ product.category }}</span>\r\n                                          <br />\r\n                                          <span class=\"price\">起拍价：{{ product.startingPrice }}</span>\r\n                                          <br />\r\n                                      </div>\r\n                                      <div class=\"bottom clearfix\">\r\n                                          <el-button type=\"text\" class=\"button\" @click=\"viewProduct(product)\">查看</el-button>\r\n                                          <el-button type=\"text\" class=\"button\" @click=\"addToCart(product)\">竞价</el-button>\r\n                                          \r\n                                          <el-dialog title=\"商品详情\" :visible.sync=\"dialogFormVisible\" append-to-body>\r\n                                              <div>\r\n                                                  <p><b>商品名称:</b> {{ detail.name }}</p>\r\n                                                  <p><b>描述:</b> {{ detail.description }}</p>\r\n                                                  <p><b>类别:</b> {{ detail.category }}</p>\r\n                                                  <p><b>起拍价:</b> {{ detail.startingPrice }}</p>\r\n                                                  <p><b>上架日期:</b> {{ detail.listingDate }}</p>\r\n                                                  <p><b>状态:</b> {{ detail.status }}</p>\r\n                                                  <p v-if=\"detail.seller\"><b>卖家用户名:</b> {{ detail.seller.username }}</p>\r\n                                              </div>\r\n                                              <div slot=\"footer\" class=\"dialog-footer\">\r\n                                                  <el-button @click=\"dialogFormVisible = false\">关闭</el-button>\r\n                                              </div>\r\n                                          </el-dialog>\r\n                                      </div>\r\n                                  </el-card>\r\n                              </el-col>\r\n                          </el-row>\r\n                      </div>\r\n                  </el-card>\r\n              </el-col>\r\n          </el-row>\r\n          <el-row :gutter=\"20\" style=\"margin-top: 20px\">\r\n              <el-col :span=\"24\">\r\n                  <el-pagination\r\n                      @size-change=\"handleSizeChange\"\r\n                      @current-change=\"handleCurrentChange\"\r\n                      :current-page=\"currentPage\"\r\n                      :page-sizes=\"[9, 18, 45, 90]\"\r\n                      :page-size=\"pageSize\"\r\n                      layout=\"total, sizes, prev, pager, next, jumper\"\r\n                      :total=\"totalProducts\">\r\n                  </el-pagination>\r\n              </el-col>\r\n          </el-row>\r\n          <el-dialog title=\"竞价\" :visible.sync=\"bidDialogVisible\" width=\"30%\" append-to-body>\r\n              <div>\r\n                  <p><b>当前最高竞价:</b> {{ currentBid }} 元</p>\r\n                  <p><b>当前物主:</b> {{ currentBidderDisplayName }}</p>\r\n                  <el-input v-model=\"bidAmount\" placeholder=\"请输入您的竞价\"></el-input>\r\n              </div>\r\n              <div slot=\"footer\" class=\"dialog-footer\">\r\n                  <el-button @click=\"bidDialogVisible = false\">取消</el-button>\r\n                  <el-button type=\"primary\" @click=\"submitBid()\">提交竞价</el-button>\r\n              </div>\r\n          </el-dialog>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport Axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n      return {   auction: {},\r\n      intervalId: null,\r\n      timeLeft: {\r\n        days: 0,\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0,\r\n      },\r\n        auctionId:'',\r\n          addDialogVisible: false,\r\n          addForm: {\r\n              name: '',\r\n              description: '',\r\n              startingPrice: '',\r\n              image: '',\r\n              category:''\r\n          },\r\n          itemId: '',\r\n          detail: {},\r\n          dialogFormVisible: false,\r\n          bidDialogVisible: false,\r\n          currentBid: 0,\r\n          currentBidderId: null,\r\n          currentBidderDisplayName: '',\r\n          bidAmount: '',\r\n          formInline: {\r\n              name: '',\r\n          },\r\n          data: [],\r\n          totalProducts: 0,\r\n          pageSize: 9,\r\n          currentPage: 1,\r\n          activeIndex: '4'\r\n      };\r\n  },\r\n  created() {\r\n    \r\n    this.auctionId = this.$route.query.auctionId;\r\n  this.getData();\r\n  this.fetchAuctionData();\r\n},\r\nmounted() {\r\n    this.intervalId = setInterval(this.updateCountdown, 1000);\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.intervalId);\r\n  },\r\n  methods: {\r\n    fetchAuctionData() {\r\n      const auctionId = this.$route.query.auctionId; // Assuming auctionId is passed via route query\r\n      Axios.get(`http://localhost:8080/getauction?auctionId=${auctionId}`)\r\n        .then(response => {\r\n          if (response.data.code === 1) {\r\n            this.auction = response.data.data.rows[0];\r\n            this.updateCountdown(); // Initialize countdown once data is loaded\r\n          } else {\r\n            console.error('Failed to load auction data:', response.data.msg);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching auction data:', error);\r\n        });\r\n    },\r\n    updateCountdown() {\r\n      const now = new Date();\r\n      const endDate = new Date(this.auction.endDate);\r\n      const timeDiff = endDate - now;\r\n\r\n      if (timeDiff > 0) {\r\n        const seconds = Math.floor((timeDiff / 1000) % 60);\r\n        const minutes = Math.floor((timeDiff / 1000 / 60) % 60);\r\n        const hours = Math.floor((timeDiff / (1000 * 60 * 60)) % 24);\r\n        const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));\r\n        this.timeLeft = { days, hours, minutes, seconds };\r\n      } else {\r\n        this.timeLeft = { days: -1, hours: 0, minutes: 0, seconds: 0 };\r\n        clearInterval(this.intervalId); // Stop the countdown once it reaches the end date\r\n      }\r\n    },\r\n  \r\n     \r\n      \r\n      onSubmit() {\r\n          this.getData();\r\n      },\r\n      async getData() {\r\n        Axios.get(`http://localhost:8080/getauit?auctionId=${this.auctionId}`)\r\n        .then(response => {\r\n          if (response.data.code === 1) {\r\n            this.data = response.data.data.rows.map(item => ({\r\n              ...item.item, // 展开item对象，覆盖嵌套数据\r\n              auction: item.auction, // 保留拍卖信息\r\n              auctionItemId: item.auctionItemId,\r\n              reservePrice: item.reservePrice,\r\n              soldPrice: item.soldPrice,\r\n              saleStatus: item.saleStatus\r\n            }));\r\n            this.totalProducts = response.data.data.total;\r\n          } else {\r\n            this.$message.error('数据加载失败: ' + response.data.msg);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('请求数据出错:', error);\r\n          this.$message.error('无法加载数据，请检查网络连接');\r\n        });\r\n      },\r\n      viewProduct(product) {\r\n          this.detail = product;\r\n          this.dialogFormVisible = true;\r\n      },\r\n      async addToCart(product) {\r\n          this.detail = product;\r\n          this.itemId = product.itemId\r\n          const userData = JSON.parse(localStorage.getItem('user'));\r\n          try {\r\n              const response = await Axios.get(`http://localhost:8080/getbidmaxprice/${product.itemId}`);\r\n              if (response.data.code === 1 && response.data.msg === \"sucess\") {\r\n                  this.currentBid = response.data.data.bidAmount; // 最高竞价金额\r\n                  this.currentBidderId = response.data.data.bidderId; // 最高竞价者ID\r\n\r\n                  if (userData && userData.userId === this.currentBidderId) {\r\n                      this.currentBidderDisplayName = \"您\";\r\n                  } else {\r\n                      this.currentBidderDisplayName = \"****\";\r\n                  }\r\n              } else {\r\n                  this.currentBid = product.startingPrice; // 如果没有竞价，则显示起拍价\r\n                  this.currentBidderDisplayName = '无'; // 没有竞价者\r\n              }\r\n          } catch (error) {\r\n              console.error('Error fetching bid data:', error);\r\n              this.currentBid = product.startingPrice; // 出错则显示起拍价\r\n              this.currentBidderDisplayName = '无'; // 出错则没有竞价者\r\n          }\r\n          this.bidDialogVisible = true;\r\n      },\r\n      submitBid() {\r\n          const userData = JSON.parse(localStorage.getItem('user'));\r\n          console.log(`提交竞价: ${this.bidAmount} for product ${this.detail.name}`);\r\n          console.log(this.detail.itemId);\r\n          console.log(userData.userId);\r\n          console.log(this.bidAmount);\r\n          console.log(this.currentBid);\r\n          if (this.bidAmount > this.currentBid) {\r\n              Axios.post(`http://localhost:8080/addbids`, {\r\n                  itemId: this.detail.itemId,\r\n                  bidAmount: this.bidAmount,\r\n                  bidderId: userData.userId\r\n              })\r\n              .then(response => {\r\n                  if (response.data.code === 1) {\r\n                      this.$message({\r\n                          type: 'success',\r\n                          message: '竞价成功!'\r\n                      });\r\n                      this.bidDialogVisible = false;\r\n                      this.bidAmount = ''; // Reset bid amount after successful submission\r\n                      this.currentBid = this.bidAmount; // Update the current bid to the new bid amount\r\n                      this.currentBidderDisplayName = \"您\"; // Set the current bidder display name to \"You\"\r\n                  } else {\r\n                      this.$message({\r\n                          type: 'error',\r\n                          message: `竞价失败: ${response.data.msg}`\r\n                      });\r\n                      alert(`竞价失败: ${response.data.msg}`);\r\n                  }\r\n              });\r\n          }\r\n          // 这里可以添加提交到后端的逻辑\r\n          this.bidDialogVisible = false;\r\n          this.bidAmount = ''; // 重置竞价金额\r\n      },\r\n      handlePageChange(newPage) {\r\n          this.currentPage = newPage;\r\n          this.getData();\r\n      },\r\n      handleSizeChange(newSize) {\r\n          this.pageSize = newSize;\r\n          this.getData();\r\n      },\r\n      handleSelect(key, keyPath) {\r\n            console.log('Selected:', key, keyPath);\r\n            switch(key) {\r\n                case '1':\r\n                    this.$router.push('/home'); \r\n                    break;\r\n                case '2':\r\n                    this.$router.push('/about');  \r\n                    break;\r\n                case '3':\r\n                    this.$router.push('/items');  \r\n                    break;\r\n                case '4':\r\n                    this.$router.push('/auction');  \r\n                    break;\r\n                case '5-1':\r\n                    this.$router.push('/my'); \r\n                    break;\r\n                case '5-2':\r\n                    this.$router.push('/admin/login'); \r\n                    break;\r\n                case '5-3':\r\n                    this.$router.push('/'); \r\n                    break;\r\n                case '6':\r\n                    this.$router.push('/syslogin'); \r\n                    break;\r\n                default: this.$router.push('/*');\r\n                    \r\n            }\r\n        }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n.auction-details h1 {\r\n  color: #333;\r\n  margin-bottom: 20px; \r\n}\r\n.auction-details p {\r\n  color: #666;\r\n  margin-bottom: 20px;\r\n}\r\n/* Styles here */\r\n.image {\r\n  width: 100%;\r\n  object-fit: cover;\r\n}\r\n.image {\r\n  width: 150px;\r\n  height: 150px;\r\n  object-fit: cover; /* 确保图片被缩放以适应容器，而不会被裁剪 */\r\n}\r\n\r\n.gallery-carousel {\r\n  text-align: center; /* 居中显示 */\r\n  margin: 20px; /* 调整外边距以突出显示 */\r\n}\r\n\r\n.el-carousel {\r\n  height: 300px; /* 根据实际情况调整高度 */\r\n}\r\n\r\n.el-carousel-item img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* 图片会被缩放以适应容器，而不会被裁剪 */\r\n}\r\n\r\n.gallery-title {\r\n  color: #ffd04b; /* 显眼的颜色 */\r\n}\r\n\r\n.el-dialog {\r\n  margin-top: 20vh; /* 对话框顶部与页面顶部对齐 */\r\n}\r\n</style>\r\n\r\n<style>\r\n.auction-details {\r\n  display: flex;\r\n  justify-content: center;  /* 水平居中 */\r\n  align-items: center;      /* 垂直居中 */\r\n  height: 100%;             /* 如果需要的话，确保 div 有足够的高度 */\r\n}\r\n\r\n/* 菜单栏样式 */\r\n.menupage {\r\n  position: relative;\r\n  width: 100%;\r\n  top: 0;\r\n  z-index: 100;\r\n  height: 100%; /* 确保高度足够 */\r\n}\r\n\r\n.menupage .el-menu.el-menu--horizontal {\r\n  border-bottom: none;\r\n  height: 100px; /* 保持原有高度 */\r\n  line-height: 100px;\r\n  background-color: #545c64;\r\n}\r\n\r\n.menupage .el-menu.el-menu--horizontal > .el-menu-item,\r\n.menupage .el-menu--horizontal > .el-submenu .el-submenu__title {\r\n  height: 100px; /* 保持原有高度 */\r\n  line-height: 100px;\r\n  padding: 0px 50px;\r\n  font-size: 16px;\r\n  letter-spacing: 4px;\r\n}\r\n\r\n.menupage .el-menu--horizontal > .el-menu-item.is-active,\r\n.menupage .el-menu--horizontal > .el-submenu.is-active .el-submenu__title {\r\n  border-bottom-width: 4px;\r\n}\r\n\r\n.menupage .logo-title .el-icon-user {\r\n  margin-right: 5px;\r\n}\r\n\r\n.logo-title {\r\n  position: absolute;\r\n  left: 100px;\r\n  top: 0px;\r\n  color: #fff;\r\n  font-size: 26px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* 内容容器样式 */\r\n.container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  margin-top: 50px;\r\n  height: 100%; /* 确保高度足够 */\r\n  overflow: auto; /* 添加滚动条 */\r\n}\r\n\r\n.block {\r\n  background-color: #f7f7f7;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  width: 300px;\r\n  min-height: 260px;\r\n  position: relative;\r\n  overflow: visible; /* 确保内容不会被剪切 */\r\n}\r\n\r\n.block h2 {\r\n  margin: 0;\r\n  padding: 20px;\r\n  background-color: #545c64;\r\n  color: #fff;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  transition: top 0.3s ease-in-out;\r\n}\r\n\r\n.block p {\r\n  padding: 20px;\r\n  color: #333;\r\n  font-size: 16px;\r\n  position: absolute;\r\n  top: 60px;\r\n  width: 100%;\r\n  opacity: 0;\r\n  transition: opacity 0.5s ease;\r\n}\r\n\r\n.block:hover p {\r\n  opacity: 1;\r\n}\r\n\r\n/* 合作伙伴容器样式 */\r\n.partners-container {\r\n  display: flex;\r\n  flex-wrap: wrap; /* 确保元素可以换行 */\r\n  justify-content: space-around; /* 分布间隔平均 */\r\n  align-items: flex-start; /* 对齐到容器的顶部 */\r\n  margin-top: 50px;\r\n  padding: 20px;\r\n  height: 100%; /* 确保高度足够 */\r\n  overflow: auto; /* 添加滚动条 */\r\n}\r\n\r\n.partners-container h2 {\r\n  text-align: center;\r\n  font-size: 30px;\r\n  color: #333;\r\n  margin: 20px 0;\r\n  width: 100%;\r\n}\r\n\r\n.partner-block {\r\n  background-color: #f7f7f7;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  width: 22%; /* 调整宽度以适应一行显示四个元素 */\r\n  min-height: 320px; /* 调整高度以保持一致 */\r\n  margin: 10px 1%; /* 调整边距以适应响应式设计 */\r\n  padding: 20px;\r\n  text-align: center;\r\n  transition: transform 0.3s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: visible; /* 确保内容不会被剪切 */\r\n}\r\n\r\n.partner-block:hover {\r\n  transform: translateY(-10px);\r\n}\r\n\r\n.partner-logo {\r\n  width: 150px; /* 控制 logo 的大小 */\r\n  height: auto;\r\n  margin-bottom: 20px;\r\n}\r\n.partner-name {\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.partner-description {\r\n  font-size: 14px;\r\n  color: #666;\r\n  line-height: 1.6;\r\n  text-align: justify;\r\n}\r\n\r\n/* 调整容器高度以显示滚动条 */\r\n.container,\r\n.partners-container {\r\n  height: 100%; /* 确保高度足够 */\r\n  overflow: auto; /* 添加滚动条 */\r\n}\r\n\r\n/* 确保内容元素可以填充容器的高度 */\r\n.block,\r\n.partner-block {\r\n  min-height: 100%; /* 确保内容元素可以填充容器的高度 */\r\n}\r\n\r\n/* 使用flex-grow属性填充容器 */\r\n.block,\r\n.partner-block {\r\n  flex-grow: 1; /* 确保子元素可以填充可用空间 */\r\n}\r\n\r\n/* 确保父元素没有overflow: hidden */\r\n.parent-container {\r\n  overflow: auto; /* 确保父元素没有overflow: hidden */\r\n}\r\n\r\n/* 调整父容器高度以显示滚动条 */\r\n.parent-container {\r\n  height: 100vh; /* 或者设置其他合适的高度 */\r\n  overflow: auto; /* 添加滚动条 */\r\n}\r\n.el-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-col {\r\n  border-radius: 4px;\r\n}\r\n\r\n.box-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.image {\r\n  width: 100%;\r\n  display: block;\r\n}\r\n\r\n.content {\r\n  padding: 14px;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: #303133;\r\n  word-wrap: break-word;\r\n}\r\n\r\n.name {\r\n  font-size: 16px;\r\n  color: #303133;\r\n  font-weight: bold;\r\n}\r\n\r\n.description {\r\n  color: #909399;\r\n  font-size: 14px;\r\n}\r\n\r\n.price {\r\n  color: #f56c6c;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.bottom {\r\n  margin-top: 13px;\r\n  line-height: 12px;\r\n}\r\n\r\n.button {\r\n  padding: 0;\r\n  margin-left: 5px;\r\n}\r\n</style>\r\n\r\n"]}]}
