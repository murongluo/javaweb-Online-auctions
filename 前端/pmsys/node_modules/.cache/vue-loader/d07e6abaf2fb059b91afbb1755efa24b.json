{"remainingRequest":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\25194\\Desktop\\pmsys\\src\\components\\page\\UserManagement.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\25194\\Desktop\\pmsys\\src\\components\\page\\UserManagement.vue","mtime":1716434715991},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713940553201},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\babel-loader\\lib\\index.js","mtime":1713699606133},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713940553201},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\index.js","mtime":1713699628743}],"contextDependencies":[],"result":["\r\nimport Axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            formInline: {\r\n                userId: '',\r\n                username: '',\r\n                userType: ''\r\n            },\r\n            tableData: [],\r\n            dialogFormVisible: false,\r\n            detail: {},\r\n            keys: 0,\r\n            currentPage: 1,\r\n            pageSize: 100,\r\n            totalItems: 0,\r\n            formLabelWidth: '120px'\r\n        };\r\n    },\r\n    created() {\r\n        this.fetchUsers();\r\n    },\r\n    methods: {\r\n        async fetchUsers() {\r\n            try {\r\n                const response = await Axios.get('http://localhost:8080/getusers', {\r\n                    params: {\r\n                        page: this.currentPage,\r\n                        pageSize: this.pageSize,\r\n                        userId: this.formInline.userId,\r\n                        username: this.formInline.username,\r\n                        userType: this.formInline.userType\r\n                    }\r\n                });\r\n                \r\n                this.tableData = response.data.data.rows;\r\n                this.totalItems = response.data.data.total;\r\n                console.info(this.formInline)\r\n            } catch (error) {\r\n                console.error('Error fetching users:', error);\r\n            }\r\n        },\r\n        handleSizeChange(val) {\r\n            this.pageSize = val;\r\n            this.fetchUsers();\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val;\r\n            this.fetchUsers();\r\n        },\r\n        handleEdit(row) {\r\n            this.dialogFormVisible = true;\r\n            this.detail = { ...row };\r\n        },\r\n        async handleDelete(userId) {\r\n            try {\r\n                await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                });\r\n                await Axios.delete(`http://localhost:8080/deluser/${userId}`);\r\n                this.$message.success('删除成功!');\r\n                this.fetchUsers();\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    this.$message.error('删除失败');\r\n                } else {\r\n                    this.$message.info('已取消删除');\r\n                }\r\n            }\r\n        },\r\n        async updateUser() {\r\n            try {\r\n                const response = await Axios.post('http://localhost:8080/upuser', {\r\n                    userId: this.detail.userId,\r\n                    username: this.detail.username,\r\n                    userType: this.detail.userType\r\n                });\r\n                this.dialogFormVisible = false;\r\n                this.fetchUsers();\r\n                if (response.data.code === 1) {\r\n                    this.$message.success('修改成功');\r\n                } else {\r\n                    this.$message.error('修改失败');\r\n                }\r\n            } catch (error) {\r\n                console.error('Update failed:', error);\r\n                this.$message.error('修改失败');\r\n            }\r\n        }\r\n    }\r\n};\r\n",{"version":3,"sources":["UserManagement.vue"],"names":[],"mappings":";AAkFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserManagement.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item><i class=\"el-icon-user\"></i> 用户管理</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <div>\r\n            <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n                <el-form-item label=\"用户Id\">\r\n                    <el-input v-model=\"formInline.userId\" placeholder=\"请输入用户Id\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"用户名\">\r\n                    <el-input v-model=\"formInline.username\" placeholder=\"请输入用户名\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"用户类型\">\r\n                    <el-select v-model=\"formInline.userType\" placeholder=\"选择用户类型\">\r\n                        <el-option label=\"不区分\" value=\"\"></el-option>\r\n                        <el-option label=\"管理员\" value=\"管理员\"></el-option>\r\n                        <el-option label=\"用户\" value=\"用户\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"fetchUsers\">查询</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n            <el-table :data=\"tableData\" border :key=\"keys\" show-header style=\"width: 100%\">\r\n                <el-table-column fixed type=\"index\" label=\"序号\" width=\"60\"></el-table-column>\r\n                <el-table-column prop=\"userId\" label=\"用户ID\" width=\"80\"></el-table-column>\r\n                <el-table-column prop=\"username\" label=\"姓名\" width=\"100\"></el-table-column>\r\n                <el-table-column prop=\"password\" label=\"密码\" width=\"150\"></el-table-column>\r\n                <el-table-column prop=\"image\" label=\"图片\" width=\"150\">\r\n                    <template v-slot=\"scope\">\r\n                        <img :src=\"scope.row.image\" style=\"width: 100%; height: auto\" />\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"email\" label=\"邮箱\" width=\"160\"></el-table-column>\r\n                <el-table-column prop=\"address\" label=\"地址\" width=\"300\"></el-table-column>\r\n                <el-table-column prop=\"userType\" label=\"类型\" width=\"120\"></el-table-column>\r\n                <el-table-column prop=\"createDate\" label=\"注册时间\" width=\"120\"></el-table-column>\r\n                <el-table-column prop=\"lastLoginDate\" label=\"最后登录\" width=\"120\"></el-table-column>\r\n                <el-table-column fixed label=\"操作\" width=\"200\">\r\n                    <template v-slot=\"scope\">\r\n                        <el-button type=\"text\" size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n                        <el-button type=\"text\" size=\"small\" @click=\"handleDelete(scope.row.userId)\">删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <el-dialog title=\"编辑用户信息\" :visible.sync=\"dialogFormVisible\">\r\n                <el-form :model=\"detail\">\r\n                    <el-form-item label=\"用户ID\" :label-width=\"formLabelWidth\">\r\n                        <el-input v-model=\"detail.userId\" autocomplete=\"off\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"用户名\" :label-width=\"formLabelWidth\">\r\n                        <el-input v-model=\"detail.username\" autocomplete=\"off\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"用户类型\" :label-width=\"formLabelWidth\">\r\n                        <el-select v-model=\"detail.userType\" placeholder=\"请选择用户类型\">\r\n                            <el-option label=\"管理员\" value=\"管理员\"></el-option>\r\n                            <el-option label=\"用户\" value=\"用户\"></el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                </el-form>\r\n                <div slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"dialogFormVisible = false\">取消</el-button>\r\n                    <el-button type=\"primary\" @click=\"updateUser\">确认</el-button>\r\n                </div>\r\n            </el-dialog>\r\n        </div>\r\n        <el-pagination\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"currentPage\"\r\n            :page-sizes=\"[10, 20, 50, 100]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"totalItems\">\r\n        </el-pagination>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            formInline: {\r\n                userId: '',\r\n                username: '',\r\n                userType: ''\r\n            },\r\n            tableData: [],\r\n            dialogFormVisible: false,\r\n            detail: {},\r\n            keys: 0,\r\n            currentPage: 1,\r\n            pageSize: 100,\r\n            totalItems: 0,\r\n            formLabelWidth: '120px'\r\n        };\r\n    },\r\n    created() {\r\n        this.fetchUsers();\r\n    },\r\n    methods: {\r\n        async fetchUsers() {\r\n            try {\r\n                const response = await Axios.get('http://localhost:8080/getusers', {\r\n                    params: {\r\n                        page: this.currentPage,\r\n                        pageSize: this.pageSize,\r\n                        userId: this.formInline.userId,\r\n                        username: this.formInline.username,\r\n                        userType: this.formInline.userType\r\n                    }\r\n                });\r\n                \r\n                this.tableData = response.data.data.rows;\r\n                this.totalItems = response.data.data.total;\r\n                console.info(this.formInline)\r\n            } catch (error) {\r\n                console.error('Error fetching users:', error);\r\n            }\r\n        },\r\n        handleSizeChange(val) {\r\n            this.pageSize = val;\r\n            this.fetchUsers();\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val;\r\n            this.fetchUsers();\r\n        },\r\n        handleEdit(row) {\r\n            this.dialogFormVisible = true;\r\n            this.detail = { ...row };\r\n        },\r\n        async handleDelete(userId) {\r\n            try {\r\n                await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                });\r\n                await Axios.delete(`http://localhost:8080/deluser/${userId}`);\r\n                this.$message.success('删除成功!');\r\n                this.fetchUsers();\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    this.$message.error('删除失败');\r\n                } else {\r\n                    this.$message.info('已取消删除');\r\n                }\r\n            }\r\n        },\r\n        async updateUser() {\r\n            try {\r\n                const response = await Axios.post('http://localhost:8080/upuser', {\r\n                    userId: this.detail.userId,\r\n                    username: this.detail.username,\r\n                    userType: this.detail.userType\r\n                });\r\n                this.dialogFormVisible = false;\r\n                this.fetchUsers();\r\n                if (response.data.code === 1) {\r\n                    this.$message.success('修改成功');\r\n                } else {\r\n                    this.$message.error('修改失败');\r\n                }\r\n            } catch (error) {\r\n                console.error('Update failed:', error);\r\n                this.$message.error('修改失败');\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n"]}]}
