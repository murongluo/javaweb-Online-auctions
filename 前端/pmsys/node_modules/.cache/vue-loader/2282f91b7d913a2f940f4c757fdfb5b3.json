{"remainingRequest":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\25194\\Desktop\\pmsys\\src\\components\\page\\Pay.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\25194\\Desktop\\pmsys\\src\\components\\page\\Pay.vue","mtime":1716486356885},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713940553201},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\babel-loader\\lib\\index.js","mtime":1713699606133},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713940553201},{"path":"C:\\Users\\25194\\Desktop\\pmsys\\node_modules\\vue-loader\\lib\\index.js","mtime":1713699628743}],"contextDependencies":[],"result":["\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    created() {\r\n      this.getPaymentsData();\r\n    },\r\n    methods: {\r\n      handleSizeChange(val) {\r\n        this.pageSize = val;\r\n        this.getPaymentsData();\r\n      },\r\n      handleCurrentChange(val) {\r\n        this.currentPage = val;\r\n        this.getPaymentsData();\r\n      },\r\n      onSubmit() {\r\n        this.currentPage = 1;\r\n        this.getPaymentsData();\r\n      },\r\n      async getPaymentsData() {\r\n        const params = {\r\n          page: this.currentPage,\r\n          pageSize: this.pageSize,\r\n          paymentId:this.formInline.paymentId,\r\n          paymentMethod: this.formInline.paymentMethod,\r\n          paymentStatus: this.formInline.paymentStatus\r\n        };\r\n        try {\r\n          const response = await axios.get('http://localhost:8080/getpay', { params });\r\n          this.tableData = response.data.data.rows;\r\n          this.totalItems = response.data.data.total;\r\n          console.info(this.tableData);\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      },\r\n      handleClick(row) {\r\n        console.log('Handling click for:', row);\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        formInline: {\r\n          paymentId:'',\r\n          paymentMethod: '',\r\n          paymentStatus: ''\r\n        },\r\n        tableData: [],\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        totalItems: 0\r\n      };\r\n    }\r\n  };\r\n  ",{"version":3,"sources":["Pay.vue"],"names":[],"mappings":";AAiEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Pay.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"crumbs\">\r\n        <el-breadcrumb separator=\"/\">\r\n          <el-breadcrumb-item> <i class=\"el-icon-goods\"></i> 支付订单 </el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n      </div>\r\n      <div>\r\n        <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"支付ID\">\r\n                <el-input v-model=\"formInline.paymentId\" placeholder=\"请输入商品名称\"></el-input>\r\n            </el-form-item>\r\n          <el-form-item label=\"支付方式\">\r\n            <el-select v-model=\"formInline.paymentMethod\" placeholder=\"请选择\">\r\n              <el-option label=\"未选择\" value=\"\"></el-option>\r\n              <el-option label=\"银行卡\" value=\"银行卡\"></el-option>\r\n              <el-option label=\"支付宝\" value=\"支付宝\"></el-option>\r\n              <el-option label=\"微信\" value=\"微信\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"支付状态\">\r\n            <el-select v-model=\"formInline.paymentStatus\" placeholder=\"请选择\">\r\n              <el-option label=\"不区分\" value=\"\"></el-option>\r\n              <el-option label=\"待支付\" value=\"待支付\"></el-option>\r\n              <el-option label=\"支付成功\" value=\"支付成功\"></el-option>\r\n              <el-option label=\"支付失败\" value=\"支付失败\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"onSubmit\">查询</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      <div>\r\n        <el-table :data=\"tableData\" border style=\"width: 100%\">\r\n          <el-table-column fixed type=\"index\" label=\"序号\" width=\"60\"> </el-table-column>\r\n          <el-table-column prop=\"paymentId\" label=\"支付ID\" width=\"120\"> </el-table-column>\r\n          <el-table-column prop=\"item.seller.username\" label=\"卖家用户名\" width=\"120\"> </el-table-column>\r\n          <el-table-column prop=\"item.name\" label=\"商品名称\"> </el-table-column>\r\n          <el-table-column prop=\"amount\" label=\"金额\" width=\"100\"> </el-table-column>\r\n          <el-table-column prop=\"paymentMethod\" label=\"支付方式\" width=\"100\"> </el-table-column>\r\n          <el-table-column prop=\"paymentStatus\" label=\"支付状态\" width=\"100\"> </el-table-column>\r\n          <el-table-column prop=\"paymentDate\" label=\"支付日期\" width=\"180\"> </el-table-column>\r\n          <el-table-column prop=\"payer.username\" label=\"付款人用户名\" width=\"120\"> </el-table-column>\r\n          \r\n    \r\n          \r\n        </el-table>\r\n      </div>\r\n      <div class=\"block\">\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"currentPage\"\r\n          :page-sizes=\"[10, 20, 30, 50]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"totalItems\"\r\n        >\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    created() {\r\n      this.getPaymentsData();\r\n    },\r\n    methods: {\r\n      handleSizeChange(val) {\r\n        this.pageSize = val;\r\n        this.getPaymentsData();\r\n      },\r\n      handleCurrentChange(val) {\r\n        this.currentPage = val;\r\n        this.getPaymentsData();\r\n      },\r\n      onSubmit() {\r\n        this.currentPage = 1;\r\n        this.getPaymentsData();\r\n      },\r\n      async getPaymentsData() {\r\n        const params = {\r\n          page: this.currentPage,\r\n          pageSize: this.pageSize,\r\n          paymentId:this.formInline.paymentId,\r\n          paymentMethod: this.formInline.paymentMethod,\r\n          paymentStatus: this.formInline.paymentStatus\r\n        };\r\n        try {\r\n          const response = await axios.get('http://localhost:8080/getpay', { params });\r\n          this.tableData = response.data.data.rows;\r\n          this.totalItems = response.data.data.total;\r\n          console.info(this.tableData);\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      },\r\n      handleClick(row) {\r\n        console.log('Handling click for:', row);\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        formInline: {\r\n          paymentId:'',\r\n          paymentMethod: '',\r\n          paymentStatus: ''\r\n        },\r\n        tableData: [],\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        totalItems: 0\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  "]}]}
